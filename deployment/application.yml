---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-kubernetes
  labels:
    app: nodejs-kubernetes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodejs-kubernetes
  template:
    metadata:
      labels:
        app: nodejs-kubernetes
    spec:
      containers:
        - name: nodejs-kubernetes
          image: nodejs-kubernetes:1.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
          resources:
            limits:
              cpu: 1
              memory: "200Mi"
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-pass
                  key: password
            - name: MYSQL_DB_ID
              valueFrom:
                secretKeyRef:
                  name: redis-db-id
                  key: db_id
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: redis-host
                  key: host
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-host
                  key: port
---
apiVersion: v1
kind: Service
metadata:
  name: nodejs-service
  labels:
    app: nodejs-service
spec:
  type: LoadBalancer
  selector:
    app: nodejs-kubernetes
  ports:
    - name: http
      port: 3000
      targetPort: 3000
      protocol: TCP